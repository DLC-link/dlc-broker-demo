<!-- <VStack>
                            
                                <TableContainer
                                    width={[250, 1250]}
                                    alignContent="center"
                                    justifyContent="center"
                                    padding="10px 10px"
                                    borderRadius="md"
                                    boxShadow="dark-lg"
                                    bg="white"
                                >
                                    <Table
                                        variant='simple'>
                                        <TableCaption>DLC List</TableCaption>
                                        <Thead>
                                            <Tr>
                                                <Th fontSize={[5, 10]}>Status</Th>
                                                <Th fontSize={[5, 10]}>UUID</Th>
                                                <Th fontSize={[5, 10]}>User ID</Th>
                                                <Th fontSize={[5, 10]}>Vault Collateral</Th>
                                                <Th fontSize={[5, 10]}>Vault Loan</Th>
                                                <Th fontSize={[5, 10]}>Liquidation Fee</Th>
                                                <Th fontSize={[5, 10]}>Liquidation Ratio</Th>
                                                <Th fontSize={[5, 10]}>Closing Price</Th>
                                                <Th fontSize={[5, 10]}>Action</Th>
                                            </Tr>
                                        </Thead>
                                        <Tbody fontSize="sm">
                                            {this.state.formattedDLCArray?.map((dlc) => (
                                                <Tr key={dlc.dlcUUID}>
                                                    <Td>
                                                        {dlc.status === "not-ready" && (
                                                            <Tooltip label="DLC is not ready yet">
                                                                <TimeIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "unfunded" && (
                                                            <Tooltip label="DLC is not yet funded">
                                                                <TimeIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "pre-repaid" && (
                                                            <Tooltip label="Waiting to be repaid">
                                                                <TimeIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "pre-liquidated" && (
                                                            <Tooltip label="Waiting to be liquidated">
                                                                <TimeIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "ready" && (
                                                            <Tooltip label="DLC is ready">
                                                                <InfoIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "funded" && (
                                                            <Tooltip label="DLC is funded">
                                                                <ArrowRightIcon color="orange" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "liquidated" && (
                                                            <Tooltip label="DLC is liquidated">
                                                                <UnlockIcon color="green" />
                                                            </Tooltip>
                                                        )}
                                                        {dlc.status === "repaid" && (
                                                            <Tooltip label="DLC is repaid">
                                                                <CheckCircleIcon color="green" />
                                                            </Tooltip>
                                                        )}
                                                    </Td>
                                                    <Td fontSize={[5, 10]}>{dlc.dlcUUID}</Td>
                                                    <Td fontSize={[5, 10]}>{easyTruncateAddress(dlc.owner)}</Td>
                                                    <Td fontSize={[5, 10]}>{dlc.vaultCollateral}</Td>
                                                    <Td fontSize={[5, 10]}>{dlc.vaultLoan}</Td>
                                                    <Td fontSize={[5, 10]}>{dlc.liquidationFee}</Td>
                                                    <Td fontSize={[5, 10]}>{dlc.liquidationRatio}</Td>
                                                    <Td fontSize={[5, 10]}>{dlc.closingPrice}</Td>
                                                    <Td>
                                                        {dlc.status === "ready" && (
                                                            <Button
                                                                _hover={{
                                                                    color: "white",
                                                                    bg: "accent"
                                                                }}
                                                                background="white"
                                                                bgGradient="linear(to-r, primary1, primary2)"
                                                                bgClip="text"
                                                                width={100}
                                                                shadow="2xl"
                                                                variant="outline"
                                                                fontSize="sm"
                                                                fontWeight="bold"
                                                            >SEND BTC</Button>
                                                        )}
                                                        {dlc.status === ("not-ready" || "pre-liquidated" || "pre-paid") && (
                                                            <Button
                                                                _hover={{
                                                                    shadow: "none"
                                                                }}
                                                                isLoading
                                                                loadingText="PENDING"
                                                                background="white"
                                                                color="gray"
                                                                width={100}
                                                                shadow="2xl"
                                                                variant="outline"
                                                                fontSize="sm"
                                                                fontWeight="bold"
                                                            >
                                                            </Button>
                                                        )}
                                                        {dlc.status === "funded" && (
                                                            <VStack>
                                                                <Button
                                                                    _hover={{
                                                                        color: "white",
                                                                        bg: "accent"
                                                                    }}
                                                                    background="white"
                                                                    bgGradient="linear(to-r, primary1, primary2)"
                                                                    bgClip="text"
                                                                    width={100}
                                                                    shadow="2xl"
                                                                    variant="outline"
                                                                    fontSize="sm"
                                                                    fontWeight="bold"
                                                                    onClick={this.withdraw}
                                                                >WITHDRAW</Button>
                                                                <Button
                                                                    _hover={{
                                                                        color: "white",
                                                                        bg: "accent"
                                                                    }}
                                                                    background="white"
                                                                    bgGradient="linear(to-r, primary1, primary2)"
                                                                    bgClip="text"
                                                                    width={100}
                                                                    shadow="2xl"
                                                                    variant="outline"
                                                                    fontSize="sm"
                                                                    fontWeight="bold"
                                                                    onClick={this.liquidate}
                                                                >LIQUIDATE</Button>
                                                            </VStack>
                                                        )}
                                                    </Td>
                                                </Tr>
                                            ))}
                                        </Tbody>
                                    </Table>
                                </TableContainer>
                            </SlideFade>
                        </VStack> -->